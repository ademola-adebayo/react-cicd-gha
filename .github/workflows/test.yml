name: Testing Custom Actions
on:
  push:
    branches:
      - workflow
  pull_request:
    branches:
      - workflow
  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: read
  # deployments: read
  # packages: read
  # repository-projects: read
  # security-events: read
  # statuses: read

jobs:
  testing-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Report issues
        uses: ./.github/actions/issue
        id: issue
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_TOKEN }}
        with:
          token: ${{ secrets.GHA_TOKEN }}
          title: Demola
          body: Body
          assignees: |
            ademola-adebayo
            cashewhand

      - run: |
          echo ${{ steps.issue.outputs.issue }}

      - name: Another way to access
        uses: actions/github-script@v4
        id: query-jobs
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
            # github.rest.actions.getWorkflowRunAttempt({
            #   owner: context.repo.owner,
            #   repo: context.repo.repo,
            #   run_id: ${{ github.run_id }},
            #   attempt_number: ${{ github.run_attempt }},
            # });
            # console.log(jobs[jobs.length-1].id);
          result-encoding: string
      # - run: |
      #     echo "${{ format('{0}/checks?check_run_id={1}', github.event.pull_request._links.html.href, steps.query-jobs.outputs.result) }}"

      - name: Check Files
        uses: ./.github/actions/check

      - name: Log Information
        run: |
          echo "repository: ${{ github.repository }}"
          echo "action name: ${{ github.job}}"
          echo "started by user: ${{ github.actor }}"
          echo "time: ${{ github.event.head_commit.timestamp }}"

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: artifacts/**/*.xml

      - name: Dump Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump runner context
        if: always()
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Adding markdown
        run: echo '### Hello world! :rocket:' >> $GITHUB_STEP_SUMMARY

  # call-to-action:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Run Custom Action
  #       uses: ./.github/actions/custom
  #       id: custom
  #       with:
  #         token: ${{ secrets.GHA_TOKEN }}
  #         owner: ${{ github.repository_owner }}
  #         repo: ${{ github.event.repository.name }}
  #         run_id: ${{ github.run_id }}
  #         attempt_number: ${{ github.run_attempt }}

  #     # - name: Spit out outputs
  #     #   run: |
  #     #     echo "Repo: ${{ steps.custom.outputs.repo }}"
  #     #     echo "Owner: ${{ steps.custom.outputs.owner }}"
  #     #     echo "Run Id: ${{ steps.custom.outputs.run_id }}"

  #     # - name: Big Data
  #     #   run: |
  #     #     echo ${{ steps.custom.outputs.big_data }}
